/*
* generated by Xtext
*/
grammar InternalSAL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.tesis.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.tesis.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.tesis.services.SALGrammarAccess;

}

@parser::members {
 
 	private SALGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SALGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleContext
entryRuleContext 
:
{ before(grammarAccess.getContextRule()); }
	 ruleContext
{ after(grammarAccess.getContextRule()); } 
	 EOF 
;

// Rule Context
ruleContext
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextAccess().getGroup()); }
(rule__Context__Group__0)
{ after(grammarAccess.getContextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBody
entryRuleBody 
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBodyAccess().getGroup()); }
(rule__Body__Group__0)
{ after(grammarAccess.getBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration 
:
{ before(grammarAccess.getTypeDeclarationRule()); }
	 ruleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationRule()); } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDeclarationAccess().getGroup()); }
(rule__TypeDeclaration__Group__0)
{ after(grammarAccess.getTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleDeclaration
entryRuleModuleDeclaration 
:
{ before(grammarAccess.getModuleDeclarationRule()); }
	 ruleModuleDeclaration
{ after(grammarAccess.getModuleDeclarationRule()); } 
	 EOF 
;

// Rule ModuleDeclaration
ruleModuleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleDeclarationAccess().getGroup()); }
(rule__ModuleDeclaration__Group__0)
{ after(grammarAccess.getModuleDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclarations
entryRuleDeclarations 
:
{ before(grammarAccess.getDeclarationsRule()); }
	 ruleDeclarations
{ after(grammarAccess.getDeclarationsRule()); } 
	 EOF 
;

// Rule Declarations
ruleDeclarations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationsAccess().getAlternatives()); }
(rule__Declarations__Alternatives)
{ after(grammarAccess.getDeclarationsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDecl
entryRuleVarDecl 
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDeclAccess().getGroup()); }
(rule__VarDecl__Group__0)
{ after(grammarAccess.getVarDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueSet
entryRuleValueSet 
:
{ before(grammarAccess.getValueSetRule()); }
	 ruleValueSet
{ after(grammarAccess.getValueSetRule()); } 
	 EOF 
;

// Rule ValueSet
ruleValueSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueSetAccess().getAlternatives()); }
(rule__ValueSet__Alternatives)
{ after(grammarAccess.getValueSetAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScalar
entryRuleScalar 
:
{ before(grammarAccess.getScalarRule()); }
	 ruleScalar
{ after(grammarAccess.getScalarRule()); } 
	 EOF 
;

// Rule Scalar
ruleScalar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScalarAccess().getNameAssignment()); }
(rule__Scalar__NameAssignment)
{ after(grammarAccess.getScalarAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubrange
entryRuleSubrange 
:
{ before(grammarAccess.getSubrangeRule()); }
	 ruleSubrange
{ after(grammarAccess.getSubrangeRule()); } 
	 EOF 
;

// Rule Subrange
ruleSubrange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubrangeAccess().getGroup()); }
(rule__Subrange__Group__0)
{ after(grammarAccess.getSubrangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getTOBECONTINUEDKeyword()); }

	'TO BE CONTINUED' 

{ after(grammarAccess.getDefinitionAccess().getTOBECONTINUEDKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitialisation
entryRuleInitialisation 
:
{ before(grammarAccess.getInitialisationRule()); }
	 ruleInitialisation
{ after(grammarAccess.getInitialisationRule()); } 
	 EOF 
;

// Rule Initialisation
ruleInitialisation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitialisationAccess().getGroup()); }
(rule__Initialisation__Group__0)
{ after(grammarAccess.getInitialisationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGuard
entryRuleGuard 
:
{ before(grammarAccess.getGuardRule()); }
	 ruleGuard
{ after(grammarAccess.getGuardRule()); } 
	 EOF 
;

// Rule Guard
ruleGuard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGuardAccess().getGroup()); }
(rule__Guard__Group__0)
{ after(grammarAccess.getGuardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Declarations__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getGroup_0()); }
(rule__Declarations__Group_0__0)
{ after(grammarAccess.getDeclarationsAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDeclarationsAccess().getGroup_1()); }
(rule__Declarations__Group_1__0)
{ after(grammarAccess.getDeclarationsAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDeclarationsAccess().getGroup_2()); }
(rule__Declarations__Group_2__0)
{ after(grammarAccess.getDeclarationsAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getDeclarationsAccess().getGroup_3()); }
(rule__Declarations__Group_3__0)
{ after(grammarAccess.getDeclarationsAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getDeclarationsAccess().getGroup_4()); }
(rule__Declarations__Group_4__0)
{ after(grammarAccess.getDeclarationsAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getDeclarationsAccess().getGroup_5()); }
(rule__Declarations__Group_5__0)
{ after(grammarAccess.getDeclarationsAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueSetAccess().getScalarParserRuleCall_0()); }
	ruleScalar
{ after(grammarAccess.getValueSetAccess().getScalarParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueSetAccess().getSubrangeParserRuleCall_1()); }
	ruleSubrange
{ after(grammarAccess.getValueSetAccess().getSubrangeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Context__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__0__Impl
	rule__Context__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getContextNameAssignment_0()); }
(rule__Context__ContextNameAssignment_0)
{ after(grammarAccess.getContextAccess().getContextNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__1__Impl
	rule__Context__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getCONTEXTKeyword_1()); }

	': CONTEXT=' 

{ after(grammarAccess.getContextAccess().getCONTEXTKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getBodyAssignment_2()); }
(rule__Context__BodyAssignment_2)
{ after(grammarAccess.getContextAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Body__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getBEGINKeyword_0()); }

	'BEGIN' 

{ after(grammarAccess.getBodyAccess().getBEGINKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__1__Impl
	rule__Body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getTypesAssignment_1()); }
(rule__Body__TypesAssignment_1)
{ after(grammarAccess.getBodyAccess().getTypesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__2__Impl
	rule__Body__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getModuleAssignment_2()); }
(rule__Body__ModuleAssignment_2)
{ after(grammarAccess.getBodyAccess().getModuleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getENDKeyword_3()); }

	'END' 

{ after(grammarAccess.getBodyAccess().getENDKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__0__Impl
	rule__TypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeNameAssignment_0()); }
(rule__TypeDeclaration__TypeNameAssignment_0)
{ after(grammarAccess.getTypeDeclarationAccess().getTypeNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__1__Impl
	rule__TypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTYPEKeyword_1()); }

	': TYPE={' 

{ after(grammarAccess.getTypeDeclarationAccess().getTYPEKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__2__Impl
	rule__TypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeValuesAssignment_2()); }
(rule__TypeDeclaration__TypeValuesAssignment_2)
{ after(grammarAccess.getTypeDeclarationAccess().getTypeValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getRightCurlyBracketSemicolonKeyword_3()); }

	'};' 

{ after(grammarAccess.getTypeDeclarationAccess().getRightCurlyBracketSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ModuleDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDeclaration__Group__0__Impl
	rule__ModuleDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDeclarationAccess().getModuleNameAssignment_0()); }
(rule__ModuleDeclaration__ModuleNameAssignment_0)
{ after(grammarAccess.getModuleDeclarationAccess().getModuleNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDeclaration__Group__1__Impl
	rule__ModuleDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDeclarationAccess().getMODULEKeyword_1()); }

	': MODULE=' 

{ after(grammarAccess.getModuleDeclarationAccess().getMODULEKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDeclarationAccess().getModuleAssignment_2()); }
(rule__ModuleDeclaration__ModuleAssignment_2)
{ after(grammarAccess.getModuleDeclarationAccess().getModuleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getBEGINKeyword_0()); }

	'BEGIN' 

{ after(grammarAccess.getModuleAccess().getBEGINKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getDeclarationAssignment_1()); }
(rule__Module__DeclarationAssignment_1)
{ after(grammarAccess.getModuleAccess().getDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getENDKeyword_2()); }

	'END' 

{ after(grammarAccess.getModuleAccess().getENDKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declarations__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_0__0__Impl
	rule__Declarations__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getINPUTKeyword_0_0()); }

	'INPUT' 

{ after(grammarAccess.getDeclarationsAccess().getINPUTKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declarations__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getVariableDeclarationsAssignment_0_1()); }
(rule__Declarations__VariableDeclarationsAssignment_0_1)
{ after(grammarAccess.getDeclarationsAccess().getVariableDeclarationsAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declarations__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_1__0__Impl
	rule__Declarations__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getOUTPUTKeyword_1_0()); }

	'OUTPUT' 

{ after(grammarAccess.getDeclarationsAccess().getOUTPUTKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declarations__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getVariableDeclarationsAssignment_1_1()); }
(rule__Declarations__VariableDeclarationsAssignment_1_1)
{ after(grammarAccess.getDeclarationsAccess().getVariableDeclarationsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declarations__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_2__0__Impl
	rule__Declarations__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getLOCALKeyword_2_0()); }

	'LOCAL' 

{ after(grammarAccess.getDeclarationsAccess().getLOCALKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declarations__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getVariableDeclarationsAssignment_2_1()); }
(rule__Declarations__VariableDeclarationsAssignment_2_1)
{ after(grammarAccess.getDeclarationsAccess().getVariableDeclarationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declarations__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_3__0__Impl
	rule__Declarations__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getDEFINITIONKeyword_3_0()); }

	'DEFINITION' 

{ after(grammarAccess.getDeclarationsAccess().getDEFINITIONKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declarations__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getDefinitionsAssignment_3_1()); }
(rule__Declarations__DefinitionsAssignment_3_1)
{ after(grammarAccess.getDeclarationsAccess().getDefinitionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declarations__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_4__0__Impl
	rule__Declarations__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getINITIALIZATIONKeyword_4_0()); }

	'INITIALIZATION' 

{ after(grammarAccess.getDeclarationsAccess().getINITIALIZATIONKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declarations__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getInitialisationsAssignment_4_1()); }
(rule__Declarations__InitialisationsAssignment_4_1)
{ after(grammarAccess.getDeclarationsAccess().getInitialisationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declarations__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_5__0__Impl
	rule__Declarations__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getTRANSITIONKeyword_5_0()); }

	'TRANSITION [' 

{ after(grammarAccess.getDeclarationsAccess().getTRANSITIONKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declarations__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_5__1__Impl
	rule__Declarations__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getTransitionsAssignment_5_1()); }
(rule__Declarations__TransitionsAssignment_5_1)
{ after(grammarAccess.getDeclarationsAccess().getTransitionsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declarations__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declarations__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getRightSquareBracketKeyword_5_2()); }

	']' 

{ after(grammarAccess.getDeclarationsAccess().getRightSquareBracketKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getVariableNameAssignment_0()); }
(rule__VarDecl__VariableNameAssignment_0)
{ after(grammarAccess.getVarDeclAccess().getVariableNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__1__Impl
	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getVarDeclAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getValueSetAssignment_2()); }
(rule__VarDecl__ValueSetAssignment_2)
{ after(grammarAccess.getVarDeclAccess().getValueSetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Subrange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subrange__Group__0__Impl
	rule__Subrange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubrangeAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getSubrangeAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subrange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subrange__Group__1__Impl
	rule__Subrange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubrangeAccess().getLowerBoundAssignment_1()); }
(rule__Subrange__LowerBoundAssignment_1)
{ after(grammarAccess.getSubrangeAccess().getLowerBoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subrange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subrange__Group__2__Impl
	rule__Subrange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubrangeAccess().getFullStopFullStopKeyword_2()); }

	'..' 

{ after(grammarAccess.getSubrangeAccess().getFullStopFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subrange__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subrange__Group__3__Impl
	rule__Subrange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubrangeAccess().getUpperBoundAssignment_3()); }
(rule__Subrange__UpperBoundAssignment_3)
{ after(grammarAccess.getSubrangeAccess().getUpperBoundAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subrange__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subrange__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubrangeAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getSubrangeAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Initialisation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initialisation__Group__0__Impl
	rule__Initialisation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getVariableAssignment_0()); }
(rule__Initialisation__VariableAssignment_0)
{ after(grammarAccess.getInitialisationAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Initialisation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initialisation__Group__1__Impl
	rule__Initialisation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getInitialisationAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Initialisation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initialisation__Group__2__Impl
	rule__Initialisation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getValueAssignment_2()); }
(rule__Initialisation__ValueAssignment_2)
{ after(grammarAccess.getInitialisationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Initialisation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initialisation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getInitialisationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTransitionNumerAssignment_0()); }
(rule__Transition__TransitionNumerAssignment_0)
{ after(grammarAccess.getTransitionAccess().getTransitionNumerAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTransitionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardsAssignment_2()); }
(rule__Transition__GuardsAssignment_2)*
{ after(grammarAccess.getTransitionAccess().getGuardsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_3()); }

	'-->' 

{ after(grammarAccess.getTransitionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAssignmentsAssignment_4()); }
(rule__Transition__AssignmentsAssignment_4)*
{ after(grammarAccess.getTransitionAccess().getAssignmentsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Guard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group__0__Impl
	rule__Guard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getVariableAssignment_0()); }
(rule__Guard__VariableAssignment_0)
{ after(grammarAccess.getGuardAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Guard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group__1__Impl
	rule__Guard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getGuardAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Guard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getValueAssignment_2()); }
(rule__Guard__ValueAssignment_2)
{ after(grammarAccess.getGuardAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableAssignment_0()); }
(rule__Assignment__VariableAssignment_0)
{ after(grammarAccess.getAssignmentAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getApostropheEqualsSignKeyword_1()); }

	'\'=' 

{ after(grammarAccess.getAssignmentAccess().getApostropheEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
(rule__Assignment__ValueAssignment_2)
{ after(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Context__ContextNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getContextNameSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getContextAccess().getContextNameSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getBodyBodyParserRuleCall_2_0()); }
	ruleBody{ after(grammarAccess.getContextAccess().getBodyBodyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__TypesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getTypesTypeDeclarationParserRuleCall_1_0()); }
	ruleTypeDeclaration{ after(grammarAccess.getBodyAccess().getTypesTypeDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__ModuleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getModuleModuleDeclarationParserRuleCall_2_0()); }
	ruleModuleDeclaration{ after(grammarAccess.getBodyAccess().getModuleModuleDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__TypeNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeNameSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getTypeDeclarationAccess().getTypeNameSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__TypeValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclarationAccess().getTypeValuesSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getTypeDeclarationAccess().getTypeValuesSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__ModuleNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDeclarationAccess().getModuleNameSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getModuleDeclarationAccess().getModuleNameSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__ModuleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleDeclarationAccess().getModuleModuleParserRuleCall_2_0()); }
	ruleModule{ after(grammarAccess.getModuleDeclarationAccess().getModuleModuleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__DeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getDeclarationDeclarationsParserRuleCall_1_0()); }
	ruleDeclarations{ after(grammarAccess.getModuleAccess().getDeclarationDeclarationsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__VariableDeclarationsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getVariableDeclarationsVarDeclParserRuleCall_0_1_0()); }
	ruleVarDecl{ after(grammarAccess.getDeclarationsAccess().getVariableDeclarationsVarDeclParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__VariableDeclarationsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getVariableDeclarationsVarDeclParserRuleCall_1_1_0()); }
	ruleVarDecl{ after(grammarAccess.getDeclarationsAccess().getVariableDeclarationsVarDeclParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__VariableDeclarationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getVariableDeclarationsVarDeclParserRuleCall_2_1_0()); }
	ruleVarDecl{ after(grammarAccess.getDeclarationsAccess().getVariableDeclarationsVarDeclParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__DefinitionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getDefinitionsDefinitionParserRuleCall_3_1_0()); }
	ruleDefinition{ after(grammarAccess.getDeclarationsAccess().getDefinitionsDefinitionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__InitialisationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getInitialisationsInitialisationParserRuleCall_4_1_0()); }
	ruleInitialisation{ after(grammarAccess.getDeclarationsAccess().getInitialisationsInitialisationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarations__TransitionsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationsAccess().getTransitionsTransitionParserRuleCall_5_1_0()); }
	ruleTransition{ after(grammarAccess.getDeclarationsAccess().getTransitionsTransitionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VariableNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getVariableNameSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getVarDeclAccess().getVariableNameSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__ValueSetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getValueSetValueSetParserRuleCall_2_0()); }
	ruleValueSet{ after(grammarAccess.getVarDeclAccess().getValueSetValueSetParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarAccess().getNameSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getScalarAccess().getNameSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange__LowerBoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubrangeAccess().getLowerBoundINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getSubrangeAccess().getLowerBoundINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange__UpperBoundAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubrangeAccess().getUpperBoundINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getSubrangeAccess().getUpperBoundINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getVariableSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getInitialisationAccess().getVariableSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getInitialisationAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TransitionNumerAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTransitionNumerSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getTransitionAccess().getTransitionNumerSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__GuardsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardsGuardParserRuleCall_2_0()); }
	ruleGuard{ after(grammarAccess.getTransitionAccess().getGuardsGuardParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__AssignmentsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAssignmentsAssignmentParserRuleCall_4_0()); }
	ruleAssignment{ after(grammarAccess.getTransitionAccess().getAssignmentsAssignmentParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getVariableSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getGuardAccess().getVariableSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getGuardAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getAssignmentAccess().getVariableSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getAssignmentAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


